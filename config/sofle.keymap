/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mo 1           &kp N1  &kp N2          &kp N3  &kp N4     &kp N5                                    &kp N6    &kp N7     &kp N8     &kp N9         &kp N0    &kp BACKSPACE
&kp TAB         &kp Q   &kp W           &kp E   &kp R      &kp T                                     &kp Y     &kp U      &kp I      &kp O          &kp P     &kp LEFT_BRACKET
&kp LEFT_ALT    &kp A   &kp S           &kp D   &kp F      &kp G                                     &kp H     &kp J      &kp K      &kp L          &kp SEMI  &kp SINGLE_QUOTE
&kp LEFT_SHIFT  &kp Z   &kp X           &kp C   &kp V      &kp B      &kp C_MUTE    &rgb_ug RGB_TOG  &kp N     &kp M      &kp COMMA  &kp DOT        &kp FSLH  &mo 1
                        &lt 2 LEFT_GUI  &mo 1   &kp LCTRL  &kp SPACE  &kp ESCAPE    &kp ENTER        &kp BSPC  &kp RCTRL  &kp RALT   &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>;
        };

        symbols {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans          &kp F1     &kp F2       &kp F3    &kp F4    &kp F5                       &kp F6      &kp F7             &kp F8           &kp F9            &kp F10       &kp F11
&trans          &kp EXCL   &kp AT       &kp HASH  &kp DLLR  &kp PRCNT                    &kp CARET   &kp AMPS           &kp KP_MULTIPLY  &kp EQUAL         &kp PIPE      &kp BACKSLASH
&kp LEFT_SHIFT  &kp MINUS  &kp KP_PLUS  &kp LBRC  &kp RBRC  &kp TILDE                    &kp LEFT    &kp DOWN           &kp UP           &kp RIGHT         &kp SEMI      &trans
&trans          &kp LPAR   &kp RPAR     &kp LBKT  &kp RBKT  &trans     &trans    &trans  &trans      &kp RIGHT_BRACKET  &kp LESS_THAN    &kp GREATER_THAN  &kp QUESTION  &trans
                           &trans       &trans    &trans    &trans     &trans    &trans  &kp DELETE  &trans             &trans
            >;
        };

        functional {
            bindings = <
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &trans      &trans       &trans                          &trans    &trans         &trans       &trans     &trans  &trans
&kt CAPSLOCK  &kp INS       &kp PSCRN     &trans      &trans       &trans                          &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp N0  &trans
&trans        &kp LALT      &kp LCTRL     &kp LSHFT   &trans       &trans                          &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans  &trans
&trans        &kp K_UNDO    &kp K_CUT     &kp K_COPY  &kp K_PASTE  &trans  &out OUT_TOG    &trans  &trans    &trans         &trans       &trans     &trans  &trans
                            &trans        &trans      &trans       &trans  &trans          &trans  &trans    &trans         &trans       &trans
            >;
        };
    };
};

/ {
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
    };
};

&left_encoder { status = "okay"; };

&right_encoder { status = "okay"; };

&led_strip {
    chain-length = <72>;    // Укажите общее количество светодиодов
};

/ {
    chosen { zmk,underglow = &led_strip; };
};

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };
};

/ {
    widgets {
        layer_status: layer_status { compatible = "zmk,widget-layer-status"; };

        battery_status: battery_status { compatible = "zmk,widget-battery-status"; };

        output_status: output_status { compatible = "zmk,widget-output-status"; };
    };
};

/ {
    chosen { zephyr,display = &oled; };
};
