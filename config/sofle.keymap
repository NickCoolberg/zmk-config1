/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors/mouse_move.dtsi>
#include <behaviors/mouse_scroll.dtsi>
#include <behaviors/mouse_key_press.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        BackDelMorph: BackDelMorph {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKDELMORPH";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            bindings = <
&tog 2          &kp EXCL  &kp AT     &kp HASH   &kp DLLR  &kp PRCNT                                             &kp CARET      &kp AMPS         &kp KP_MULTIPLY  &kp LPAR    &kp RPAR       &kp BACKSLASH
&kp TAB         &kp Q     &kp W      &kp E      &kp R     &kp T                                                 &kp Y          &kp U            &kp I            &kp O       &kp P          &kp LEFT_BRACKET
&kp LEFT_SHIFT  &kp A     &kp S      &kp D      &kp F     &kp G                                                 &kp H          &kp J            &kp K            &kp L       &kp SEMICOLON  &kp SQT
&kp LEFT_ALT    &kp Z     &kp X      &kp C      &kp V     &kp B                 &kp C_MUTE    &kp C_PLAY_PAUSE  &kp N          &kp M            &kp COMMA        &kp PERIOD  &kp SLASH      &kp RIGHT_ALT
                          &kp LSHFT  &kp LCTRL  &mo 1     &mt LEFT_SHIFT SPACE  &kp ESCAPE    &kp ENTER         &BackDelMorph  &lt 2 RIGHT_ALT  &kp RCTRL        &tog 1
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        symbols {
            bindings = <
&kp TILDE       &kp F1      &kp F2          &kp F3          &kp F4           &kp F5                          &kp F6     &kp F7             &kp F8         &kp F9            &kp F10       &kp F11
&kp GRAVE       &kp N1      &kp N2          &kp N3          &kp N4           &kp N5                          &kp N6     &kp N7             &kp N8         &kp N9            &kp N0        &kp BACKSLASH
&kp LEFT_SHIFT  &caps_word  &none           &kp LEFT_BRACE  &kp RIGHT_BRACE  &none                           &kp EQUAL  &kp MINUS          &kp PLUS       &kp AT_SIGN       &kp COLON     &kp PIPE
&trans          &none       &kp UNDERSCORE  &kp LBKT        &kp RBKT         &kp LEFT_GUI  &none     &none   &none      &kp RIGHT_BRACKET  &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION  &none
                            &trans          &trans          &trans           &kp LEFT_ALT  &trans    &trans  &trans     &kp RIGHT_SHIFT    &trans         &tog 1
            >;
        };

        movement {
            bindings = <
&tog 2  &none           &none           &none         &none            &none                                           &none   &none     &none           &none         &none            &none
&none   &none           &mkp MCLK       &mkp RCLK     &mkp LCLK        &msc MOVE_UP                                    &none   &kp HOME  &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &none
&none   &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &msc MOVE_DOWN                                  &none   &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none
&none   &none           &none           &none         &none            &none           &out OUT_TOG    &bt BT_CLR_ALL  &none   &kp N0    &none           &none         &none            &none
                        &none           &none         &none            &none           &none           &none           &trans  &none     &none           &none
            >;
        };

        functional {
            bindings = <
&none         &none       &none      &none       &none        &none                  &none  &none  &none  &none  &none  &none
&kp CAPSLOCK  &none       &none      &none       &none        &none                  &none  &none  &none  &none  &none  &none
&none         &none       &none      &none       &none        &none                  &none  &none  &none  &none  &none  &none
&none         &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &none  &none    &none  &none  &none  &none  &none  &none  &none
                          &none      &none       &none        &none  &none    &none  &none  &none  &none  &none
            >;
        };

        qwerty {
            bindings = <
&to 2           &kp EXCL  &kp AT  &kp HASH  &kp DLLR   &kp PRCNT                                  &kp CARET      &kp AMPS         &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BACKSLASH
&kp TAB         &kp Q     &kp W   &kp E     &kp R      &kp T                                      &kp Y          &kp U            &kp I            &kp O     &kp P     &kp LEFT_BRACKET
&kp LEFT_SHIFT  &kp A     &kp S   &kp D     &kp F      &kp G                                      &kp H          &kp J            &kp K            &kp L     &kp SEMI  &kp SINGLE_QUOTE
&kp LEFT_ALT    &kp Z     &kp X   &kp C     &kp V      &kp B      &kp C_MUTE    &kp C_PLAY_PAUSE  &kp N          &kp M            &kp COMMA        &kp DOT   &kp FSLH  &kp RIGHT_ALT
                          &mo 2   &mo 1     &kp LCTRL  &kp SPACE  &kp ESCAPE    &kp ENTER         &BackDelMorph  &lt 2 RIGHT_ALT  &kp RCTRL        &tog 1
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };
    };
};

/ {
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
    };
};

&left_encoder { status = "okay"; };

&right_encoder { status = "okay"; };

&led_strip {
    chain-length = <72>;    // Укажите общее количество светодиодов
};

/ {
    chosen { zmk,underglow = &led_strip; };
};

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };
};

/ {
    widgets {
        layer_status: layer_status { compatible = "zmk,widget-layer-status"; };

        battery_status: battery_status { compatible = "zmk,widget-battery-status"; };

        output_status: output_status { compatible = "zmk,widget-output-status"; };
    };
};

/ {
    chosen { zephyr,display = &oled; };
};
