/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
// #include <behaviors/mouse_keys.dtsi>
// #include <behaviors/mouse_move.dtsi>
// #include <behaviors/mouse_scroll.dtsi>
// #include <behaviors/mouse_key_press.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none           &kp N1  &kp N2  &kp N3  &kp N4     &kp N5                                     &kp N6    &kp N7     &kp N8     &kp N9   &kp N0    &tog 1
&kp TAB         &kp Q   &kp W   &kp E   &kp R      &kp T                                      &kp Y     &kp U      &kp I      &kp O    &kp P     &kp LEFT_BRACKET
&kp LEFT_SHIFT  &kp A   &kp S   &kp D   &kp F      &kp G                                      &kp H     &kp J      &kp K      &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp LEFT_ALT    &kp Z   &kp X   &kp C   &kp V      &kp B      &kp C_MUTE    &kp C_PLAY_PAUSE  &kp N     &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_ALT
                        &mo 2   &mo 1   &kp LCTRL  &kp SPACE  &kp ESCAPE    &kp ENTER         &kp BSPC  &kp RCTRL  &mo 1      &mo 2
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        symbols {
            bindings = <
&kp TILDE  &kp F1     &kp F2     &kp F3       &kp F4    &kp F5                     &kp F6      &kp F7             &kp F8           &kp F9            &kp F10       &kp F11
&kp GRAVE  &kp EXCL   &kp AT     &kp HASH     &kp DLLR  &kp PRCNT                  &kp CARET   &kp AMPS           &kp KP_MULTIPLY  &kp LPAR          &kp RPAR      &kp BACKSLASH
&none      &kp EQUAL  &kp MINUS  &kp KP_PLUS  &kp LBRC  &kp RBRC                   &kp LEFT    &kp DOWN           &kp UP           &kp RIGHT         &kp COLON     &kp PIPE
&none      &none      &none      &kp LBKT     &kp RBKT  &none      &none    &none  &none       &kp RIGHT_BRACKET  &kp LESS_THAN    &kp GREATER_THAN  &kp QUESTION  &kp RIGHT_SHIFT
                      &none      &none        &none     &none      &none    &none  &kp DELETE  &none              &none            &none
            >;
        };

        functional {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0    &bt BT_SEL 1    &none         &none            &none                         &rgb_ug RGB_COLOR_HSB(185,100,50)  &rgb_ug RGB_COLOR_HSB(105,100,50)  &rgb_ug RGB_COLOR_HSB(0,0,100)  &rgb_ug RGB_TOG  &none   &none
&kt CAPSLOCK    &none           &mkp MCLK       &mkp LCLK     &mkp RCLK        &none                         &kp HOME                           &kp PAGE_DOWN                      &kp PAGE_UP                     &kp END          &kp N0  &none
&none &none  &none  &none  &none  &none                         &kp LEFT                           &kp DOWN                           &kp UP                          &kp RIGHT        &none   &none
&none           &kp K_UNDO      &kp K_CUT       &kp K_COPY    &kp K_PASTE      &none  &out OUT_TOG    &none  &none                              &none                              &none                           &none            &none   &none
                                &kp LEFT_GUI    &none         &none            &none  &none           &none  &none                              &none                              &none                           &none
            >;
        };
    };
};

/ {
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
    };
};

&left_encoder { status = "okay"; };

&right_encoder { status = "okay"; };

&led_strip {
    chain-length = <72>;    // Укажите общее количество светодиодов
};

/ {
    chosen { zmk,underglow = &led_strip; };
};

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };
};

/ {
    widgets {
        layer_status: layer_status { compatible = "zmk,widget-layer-status"; };

        battery_status: battery_status { compatible = "zmk,widget-battery-status"; };

        output_status: output_status { compatible = "zmk,widget-output-status"; };
    };
};

/ {
    chosen { zephyr,display = &oled; };
};
